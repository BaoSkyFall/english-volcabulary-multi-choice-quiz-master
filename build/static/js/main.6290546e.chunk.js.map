{"version":3,"sources":["svg/logo.svg","api/1_100_QuizQuestions.js","components/Question.js","components/QuestionCount.js","components/AnswerOption.js","components/Quiz.js","components/Result.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","quizQuestions","id","question","word","answers","correct","content","type","Question","props","react_default","a","createElement","className","QuestionCount","counter","total","AnswerOption","name","checked","answerType","answer","value","disabled","onChange","onAnswerSelected","htmlFor","answerContent","Quiz","react_transition_group","component","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","key","questionId","components_QuestionCount","questionTotal","components_Question","answerOptions","map","components_AnswerOption","Result","quizResult","answersCount","totalAnswerCorrect","percentCorrect","href","layout","labelCol","span","wrapperCol","marks","0","10","20","30","40","50","60","70","80","90","100","style","color","label","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","formRef","React","createRef","onFinish","values","console","log","onChangeSlideTotalQuestions","current","setFieldsValue","totalQuestions","onChangeSlideRangeQuestions","range","state","totalAnswersUser","result","isModalVisible","totalAnswer","quizQuestionsCore","_","quizQuestionsGenerate","quizQuestionsGenerateRaw","handleAnswerSelected","bind","assertThisInitialized","randomWrongAnswer","generateWrongAnswer","handleOk","handleCancel","setting","localStorage","getItem","JSON","parse","setState","_this2","i","ENUM","answerWrong","push","shuffleArray","questionItem","item","includes","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","event","_this3","setUserAnswer","setTimeout","setNextQuestion","setResults","getResults","objectSpread","defineProperty","toConsumableArray","concat","keys","filter","parseFloat","toFixed","components_Quiz","components_Result","getFieldsValue","setItem","stringify","_this4","_this5","src","logo","alt","SettingOutlined","onClick","openSetting","renderResult","renderQuiz","modal","title","visible","onOk","onCancel","es_form","assign","ref","Item","rules","required","slider","defaultValue","step","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6290546e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.84287d09.svg\";","var quizQuestions = [\n    {\n        id: 1,\n        question: \"What is Practical?\",\n        word: \"Practical\",\n        answers: [\n            {\n                id: 1,\n                correct: true,\n                content: \"Thực tế, hữu dụng\",\n                type: \"Thực tế, hữu dụng\"\n            }\n        ]\n    },\n    {\n        id: 2,\n        question: \"What is Responsibility?\",\n        word: \"Responsibility\",\n        answers: [\n            {\n                id: 2,\n                correct: true,\n                content: \"Trách nhiệm, nghĩa vụ, bổn phận\",\n                type: \"Trách nhiệm, nghĩa vụ, bổn phận\"\n            }\n        ]\n    },\n    {\n        id: 3,\n        question: \"What is Admission\",\n        word: \"Admission\",\n        answers: [\n            {\n                id: 3,\n                correct: true,\n                content: \"Sự nhận vào\",\n                type: \"Sự nhận vào\"\n            }\n        ]\n    },\n    {\n        id: 4,\n        question: \"What is Campus?\",\n        word: \"Campus\",\n        answers: [\n            {\n                id: 4,\n                correct: true,\n                content: \"Khuôn viên\",\n                type: \"Khuôn viên\"\n            }\n        ]\n    },\n    {\n        id: 5,\n        question: \"What is Frequently?\",\n        word: \"Frequently\",\n        answers: [\n            {\n                id: 5,\n                correct: true,\n                content: \"Thường xuyên\",\n                type: \"Thường xuyên\"\n            }\n        ]\n    },\n    {\n        id: 6,\n        question: \"What is Commute?\",\n        word: \"Commute\",\n        answers: [\n            {\n                id: 6,\n                correct: true,\n                content: \"Di chuyển, đi lại, tham gia giao thông\",\n                type: \"Di chuyển, đi lại, tham gia giao thông\"\n            }\n        ]\n    },\n    {\n        id: 7,\n        question: \"What is Don't mind?\",\n        word: \"Don't mind\",\n        answers: [\n            {\n                id: 7,\n                correct: true,\n                content: \"Không bận tâm, bận lòng, để ý\",\n                type: \"Không bận tâm, bận lòng, để ý\"\n            }\n        ]\n    },\n    {\n        id: 8,\n        question: \"What is Can't Stand?\",\n        word: \"Can't Stand\",\n        answers: [\n            {\n                id: 8,\n                correct: true,\n                content: \"Không thể chịu đựng được\",\n                type: \"Không thể chịu đựng được\"\n            }\n        ]\n    },\n    {\n        id: 9,\n        question: \"What is Luggage?\",\n        word: \"Luggage\",\n        answers: [\n            {\n                id: 9,\n                correct: true,\n                content: \"Hành lý\",\n                type: \"Hành lý\"\n            }\n        ]\n    },\n    {\n        id: 10,\n        question: \"What is Cab?\",\n        word: \"Cab\",\n        answers: [\n            {\n                id: 10,\n                correct: true,\n                content: \"Xe taxi\",\n                type: \"Xe taxi\"\n            }\n        ]\n    },\n    {\n        id: 11,\n        question: \"What is Quit?\",\n        word: \"Quit\",\n        answers: [\n            {\n                id: 11,\n                correct: true,\n                content: \"Từ bỏ\",\n                type: \"Từ bỏ\"\n            }\n        ]\n    },\n    {\n        id: 12,\n        question: \"What is Consult?\",\n        word: \"Consult\",\n        answers: [\n            {\n                id: 12,\n                correct: true,\n                content: \"Tham khảo ý kiến, tư vấn, cố vấn\",\n                type: \"Tham khảo ý kiến, tư vấn, cố vấn\"\n            }\n        ]\n    },\n    {\n        id: 13,\n        question: \"What is Be one's own boss?\",\n        word: \"Be one's own boss\",\n        answers: [\n            {\n                id: 13,\n                correct: true,\n                content: \"Tự làm chủ\",\n                type: \"Tự làm chủ\"\n            }\n        ]\n    },\n    {\n        id: 14,\n        question: \"What is Front Desk?\",\n        word: \"Front Desk\",\n        answers: [\n            {\n                id: 14,\n                correct: true,\n                content: \"Bàn lễ tân, tiếp tân\",\n                type: \"Bàn lễ tân, tiếp tân\"\n            }\n        ]\n    },\n    {\n        id: 15,\n        question: \"What is Have sb do sth?\",\n        word: \"Have sb do sth\",\n        answers: [\n            {\n                id: 15,\n                correct: true,\n                content: \"Nhờ, sai khiến ai làm gì\",\n                type: \"Nhờ, sai khiến ai làm gì\"\n            }\n        ]\n    },\n    {\n        id: 16,\n        question: \"What is Have sb doing sth?\",\n        word: \"Have sb doing sth\",\n        answers: [\n            {\n                id: 16,\n                correct: true,\n                content: \"Khiến ai đó làm việc gì đó\",\n                type: \"Khiến ai đó làm việc gì đó\"\n            }\n        ]\n    },\n    {\n        id: 17,\n        question: \"What is Showroom?\",\n        word: \"Showroom\",\n        answers: [\n            {\n                id: 17,\n                correct: true,\n                content: \"Phòng trưng bày (Sản phẩm)\",\n                type: \"Phòng trưng bày (Sản phẩm)\"\n            }\n        ]\n    },\n    {\n        id: 18,\n        question: \"What is Scount?\",\n        word: \"Scount\",\n        answers: [\n            {\n                id: 18,\n                correct: true,\n                content: \"Tìm kiếm, Trinh thám\",\n                type: \"Tìm kiếm, Trinh thám\"\n            }\n        ]\n    },\n    {\n        id: 19,\n        question: \"What is Do a favor?\",\n        word: \"Do a favor\",\n        answers: [\n            {\n                id: 19,\n                correct: true,\n                content: \"Giúp đỡ\",\n                type: \"Giúp đỡ\"\n            }\n        ]\n    },\n    {\n        id: 20,\n        question: \"What is Recipe?\",\n        word: \"Recipe\",\n        answers: [\n            {\n                id: 20,\n                correct: true,\n                content: \"Công thức nấu ăn\",\n                type: \"Công thức nấu ăn\"\n            }\n        ]\n    },\n    {\n        id: 21,\n        question: \"What is Pot?\",\n        word: \"Pot\",\n        answers: [\n            {\n                id: 21,\n                correct: true,\n                content: \"Nồi, chậu\",\n                type: \"Nồi, chậu\"\n            }\n        ]\n    },\n    {\n        id: 22,\n        question: \"What is Roast?\",\n        word: \"Roast\",\n        answers: [\n            {\n                id: 22,\n                correct: true,\n                content: \"Nướng, Quay\",\n                type: \"Nướng, Quay\"\n            }\n        ]\n    },\n    {\n        id: 23,\n        question: \"What is Documentary?\",\n        word: \"Documentary\",\n        answers: [\n            {\n                id: 23,\n                correct: true,\n                content: \"Phim tài liệu\",\n                type: \"Phim tài liệu\"\n            }\n        ]\n    },\n    {\n        id: 24,\n        question: \"What is Tape?\",\n        word: \"Tape\",\n        answers: [\n            {\n                id: 24,\n                correct: true,\n                content: \"Bản ghi, đoạn băng\",\n                type: \"Bản ghi, đoạn băng\"\n            }\n        ]\n    },\n    {\n        id: 25,\n        question: \"What is Infer?\",\n        word: \"Infer\",\n        answers: [\n            {\n                id: 25,\n                correct: true,\n                content: \"Suy luận, giả thuyết\",\n                type: \"Suy luận, giả thuyết\"\n            }\n        ]\n    },\n    {\n        id: 26,\n        question: \"What is Reserve?\",\n        word: \"Reserve\",\n        answers: [\n            {\n                id: 26,\n                correct: true,\n                content: \"Đặt (phòng, chỗ)\",\n                type: \"Đặt (phòng, chỗ)\"\n            }\n        ]\n    },\n    {\n        id: 27,\n        question: \"What is Reservation?\",\n        word: \"Reservation\",\n        answers: [\n            {\n                id: 27,\n                correct: true,\n                content: \"Sự đặt trước\",\n                type: \"Sự đặt trước\"\n            }\n        ]\n    },\n    {\n        id: 28,\n        question: \"What is Available?\",\n        word: \"Available\",\n        answers: [\n            {\n                id: 28,\n                correct: true,\n                content: \"Có sẵn, Còn trống\",\n                type: \"Có sẵn, Còn trống\"\n            }\n        ]\n    },\n    {\n        id: 29,\n        question: \"What is Convention?\",\n        word: \"Convention\",\n        answers: [\n            {\n                id: 29,\n                correct: true,\n                content: \"Hội nghị\",\n                type: \"Hội nghị\"\n            }\n        ]\n    },\n    {\n        id: 30,\n        question: \"What is Adminstator?\",\n        word: \"Adminstator\",\n        answers: [\n            {\n                id: 30,\n                correct: true,\n                content: \"Người quản lý, cán bộ\",\n                type: \"Người quản lý, cán bộ\"\n            }\n        ]\n    },\n    {\n        id: 31,\n        question: \"What is Scholarship?\",\n        word: \"Scholarship\",\n        answers: [\n            {\n                id: 31,\n                correct: true,\n                content: \"Học bổng\",\n                type: \"Học bổng\"\n            }\n        ]\n    },\n    {\n        id: 32,\n        question: \"What is Schedule?\",\n        word: \"Schedule\",\n        answers: [\n            {\n                id: 32,\n                correct: true,\n                content: \"Lên lịch, lịch trình\",\n                type: \"Lên lịch, lịch trình\"\n            }\n        ]\n    },\n    {\n        id: 33,\n        question: \"What is Orientation?\",\n        word: \"Orientation\",\n        answers: [\n            {\n                id: 33,\n                correct: true,\n                content: \"Hướng nghiệp, Sự định hướng\",\n                type: \"Hướng nghiệp, Sự định hướng\"\n            }\n        ]\n    },\n    {\n        id: 34,\n        question: \"What is Chancellor?\",\n        word: \"Chancellor\",\n        answers: [\n            {\n                id: 34,\n                correct: true,\n                content: \"Hiệu trưởng\",\n                type: \"Hiệu trưởng\"\n            }\n        ]\n    },\n    {\n        id: 35,\n        question: \"What is Main hall?\",\n        word: \"Main hall\",\n        answers: [\n            {\n                id: 35,\n                correct: true,\n                content: \"Sảnh chính, hội trường chính\",\n                type: \"Sảnh chính, hội trường chính\"\n            }\n        ]\n    },\n    {\n        id: 36,\n        question: \"What is Corridor?\",\n        word: \"Corridor\",\n        answers: [\n            {\n                id: 36,\n                correct: true,\n                content: \"Hành lang\",\n                type: \"Hành lang\"\n            }\n        ]\n    },\n    {\n        id: 37,\n        question: \"What is Lecture theatre?\",\n        word: \"Lecture theatre\",\n        answers: [\n            {\n                id: 37,\n                correct: true,\n                content: \"Giảng đường\",\n                type: \"Giảng đường\"\n            }\n        ]\n    },\n    {\n        id: 38,\n        question: \"What is Common room?\",\n        word: \"Common room\",\n        answers: [\n            {\n                id: 38,\n                correct: true,\n                content: \"Phòng sinh hoạt chung\",\n                type: \"Phòng sinh hoạt chung\"\n            }\n        ]\n    },\n    {\n        id: 39,\n        question: \"What is Lift?\",\n        word: \"Lift\",\n        answers: [\n            {\n                id: 39,\n                correct: true,\n                content: \"Thang máy / nâng lên\",\n                type: \"Thang máy / nâng lên\"\n            }\n        ]\n    },\n    {\n        id: 40,\n        question: \"What is Entrance?\",\n        word: \"Entrance\",\n        answers: [\n            {\n                id: 40,\n                correct: true,\n                content: \"Cổng, cửa vào\",\n                type: \"Cổng, cửa vào\"\n            }\n        ]\n    },\n    {\n        id: 41,\n        question: \"What is Mayor?\",\n        word: \"Mayor\",\n        answers: [\n            {\n                id: 41,\n                correct: true,\n                content: \"Thị trưởng\",\n                type: \"Thị trưởng\"\n            }\n        ]\n    },\n    {\n        id: 42,\n        question: \"What is Drag?\",\n        word: \"Drag\",\n        answers: [\n            {\n                id: 42,\n                correct: true,\n                content: \"Kéo lại, kéo lê, làm chậm lại\",\n                type: \"Kéo lại, kéo lê, làm chậm lại\"\n            }\n        ]\n    },\n    {\n        id: 43,\n        question: \"What is Representative ?\",\n        word: \"Representative\",\n        answers: [\n            {\n                id: 43,\n                correct: true,\n                content: \"Người đại diện, người  phát ngôn\",\n                type: \"Người đại diện, người  phát ngôn\"\n            }\n        ]\n    },\n    {\n        id: 44,\n        question: \"What is Brief ?\",\n        word: \"Brief\",\n        answers: [\n            {\n                id: 44,\n                correct: true,\n                content: \"Ngắn, tóm tắt\",\n                type: \"Ngắn, tóm tắt\"\n            }\n        ]\n    },\n    {\n        id: 45,\n        question: \"What is Sponsor ?\",\n        word: \"Sponsor\",\n        answers: [\n            {\n                id: 45,\n                correct: true,\n                content: \"Nhà tài trợ\",\n                type: \"Nhà tài trợ\"\n            }\n        ]\n    },\n    {\n        id: 46,\n        question: \"What is Laboratory ?\",\n        word: \"Laboratory\",\n        answers: [\n            {\n                id: 46,\n                correct: true,\n                content: \"Phòng thí nghiệm\",\n                type: \"Phòng thí nghiệm\"\n            }\n        ]\n    },\n    {\n        id: 47,\n        question: \"What is Cluster ?\",\n        word: \"Cluster\",\n        answers: [\n            {\n                id: 47,\n                correct: true,\n                content: \"Cụm, nhóm\",\n                type: \"Cụm, nhóm\"\n            }\n        ]\n    },\n    {\n        id: 48,\n        question: \"What is Nanny ?\",\n        word: \"Nanny\",\n        answers: [\n            {\n                id: 48,\n                correct: true,\n                content: \"Bảo mẫu\",\n                type: \"Bảo mẫu\"\n            }\n        ]\n    },\n    {\n        id: 49,\n        question: \"What is Manny ?\",\n        word: \"Manny\",\n        answers: [\n            {\n                id: 49,\n                correct: true,\n                content: \"Bảo mẫu nam\",\n                type: \"Bảo mẫu nam\"\n            }\n        ]\n    },\n    {\n        id: 50,\n        question: \"What is Drama ?\",\n        word: \"Drama\",\n        answers: [\n            {\n                id: 50,\n                correct: true,\n                content: \"Kịch, vở kịch\",\n                type: \"Kịch, vở kịch\"\n            }\n        ]\n    },\n    {\n        id: 51,\n        question: \"What is Therapy ?\",\n        word: \"Therapy\",\n        answers: [\n            {\n                id: 51,\n                correct: true,\n                content: \"Trị liệu\",\n                type: \"Trị liệu\"\n            }\n        ]\n    },\n    {\n        id: 52,\n        question: \"What is Energetic ?\",\n        word: \"Energetic\",\n        answers: [\n            {\n                id: 52,\n                correct: true,\n                content: \"Năng động, hiếu động\",\n                type: \"Năng động, hiếu động\"\n            }\n        ]\n    },\n    {\n        id: 53,\n        question: \"What is Ideal ?\",\n        word: \"Ideal\",\n        answers: [\n            {\n                id: 53,\n                correct: true,\n                content: \"Lý tưởng\",\n                type: \"Lý tưởng\"\n            }\n        ]\n    },\n    {\n        id: 54,\n        question: \"What is Outrageous ?\",\n        word: \"Outrageous\",\n        answers: [\n            {\n                id: 54,\n                correct: true,\n                content: \"Kì quặc, không tưởng,  nguy hiểm, liều\",\n                type: \"Kì quặc, không tưởng,  nguy hiểm, liều\"\n            }\n        ]\n    },\n    {\n        id: 55,\n        question: \"What is Perspective ?\",\n        word: \"Perspective\",\n        answers: [\n            {\n                id: 55,\n                correct: true,\n                content: \"Quan điểm, góc nhìn, ý  kiến\",\n                type: \"Quan điểm, góc nhìn, ý  kiến\"\n            }\n        ]\n    },\n    {\n        id: 56,\n        question: \"What is Rough-and-tumble ?\",\n        word: \"Rough-and-tumble\",\n        answers: [\n            {\n                id: 56,\n                correct: true,\n                content: \"Lộn xộn, hỗn loạn,  không quy tắc\",\n                type: \"Lộn xộn, hỗn loạn,  không quy tắc\"\n            }\n        ]\n    },\n    {\n        id: 57,\n        question: \"What is Essential ?\",\n        word: \"Essential\",\n        answers: [\n            {\n                id: 57,\n                correct: true,\n                content: \"Thiết yếu, tối quan trọng\",\n                type: \"Thiết yếu, tối quan trọng\"\n            }\n        ]\n    },\n    {\n        id: 58,\n        question: \"What is Boundary ?\",\n        word: \"Boundary\",\n        answers: [\n            {\n                id: 58,\n                correct: true,\n                content: \"Tinh thần phiêu lưu\",\n                type: \"Tinh thần phiêu lưu\"\n            }\n        ]\n    },\n    {\n        id: 59,\n        question: \"What is Danger ?\",\n        word: \"Danger\",\n        answers: [\n            {\n                id: 59,\n                correct: true,\n                content: \"Mối nguy hại, nguy hiểm\",\n                type: \"Mối nguy hại, nguy hiểm\"\n            }\n        ]\n    },\n    {\n        id: 60,\n        question: \"What is Spirit of adventure ?\",\n        word: \"Spirit of adventure\",\n        answers: [\n            {\n                id: 60,\n                correct: true,\n                content: \"Tinh thần phiêu lưu\",\n                type: \"Tinh thần phiêu lưu\"\n            }\n        ]\n    },\n    {\n        id: 61,\n        question: \"What is Curiosity ?\",\n        word: \"Curiosity\",\n        answers: [\n            {\n                id: 61,\n                correct: true,\n                content: \"Sự tò mò, hiếu kì\",\n                type: \"Sự tò mò, hiếu kì\"\n            }\n        ]\n    },\n    {\n        id: 62,\n        question: \"What is Figure ?\",\n        word: \"Figure\",\n        answers: [\n            {\n                id: 62,\n                correct: true,\n                content: \"Vai trò, hình dạng, đặc  điểm, số\",\n                type: \"Vai trò, hình dạng, đặc  điểm, số\"\n            }\n        ]\n    },\n    {\n        id: 63,\n        question: \"What is Junior ?\",\n        word: \"Junior\",\n        answers: [\n            {\n                id: 63,\n                correct: true,\n                content: \"Trẻ em, trẻ con\",\n                type: \"Trẻ em, trẻ con\"\n            }\n        ]\n    },\n    {\n        id: 64,\n        question: \"What is Rollerblading ?\",\n        word: \"Rollerblading\",\n        answers: [\n            {\n                id: 64,\n                correct: true,\n                content: \"Trượt pa tin\",\n                type: \"Trượt pa tin\"\n            }\n        ]\n    },\n    {\n        id: 65,\n        question: \"What is Roller-skating ?\",\n        word: \"Roller-skating\",\n        answers: [\n            {\n                id: 65,\n                correct: true,\n                content: \"Trượt pa tin\",\n                type: \"Trượt pa tin\"\n            }\n        ]\n    },\n    {\n        id: 66,\n        question: \"What is Play largely ?\",\n        word: \"Play largely\",\n        answers: [\n            {\n                id: 66,\n                correct: true,\n                content: \"Chơi lớn, chơi hết mình\",\n                type: \"Chơi lớn, chơi hết mình\"\n            }\n        ]\n    },\n    {\n        id: 67,\n        question: \"What is Domestic ?\",\n        word: \"Domestic\",\n        answers: [\n            {\n                id: 67,\n                correct: true,\n                content: \"Nội địa, trong nhà\",\n                type: \"Nội địa, trong nhà\"\n            }\n        ]\n    },\n    {\n        id: 68,\n        question: \"What is Duty ?\",\n        word: \"Duty\",\n        answers: [\n            {\n                id: 68,\n                correct: true,\n                content: \"Nghĩa vụ, bổn phận,  trách nhiệm\",\n                type: \"Nghĩa vụ, bổn phận,  trách nhiệm\"\n            }\n        ]\n    },\n    {\n        id: 69,\n        question: \"What is Recruit ?\",\n        word: \"Recruit\",\n        answers: [\n            {\n                id: 69,\n                correct: true,\n                content: \"Tuyển dụng, chiêu mộ\",\n                type: \"Tuyển dụng, chiêu mộ\"\n            }\n        ]\n    },\n    {\n        id: 70,\n        question: \"What is Father figure ?\",\n        word: \"Father figure\",\n        answers: [\n            {\n                id: 70,\n                correct: true,\n                content: \"Vai trò người cha\",\n                type: \"Vai trò người cha\"\n            }\n        ]\n    },\n    {\n        id: 71,\n        question: \"What is Male figure ?\",\n        word: \"Male figure\",\n        answers: [\n            {\n                id: 71,\n                correct: true,\n                content: \"Vai trò người đàn ông\",\n                type: \"Vai trò người đàn ông\"\n            }\n        ]\n    },\n    {\n        id: 72,\n        question: \"What is Childcare ?\",\n        word: \"Childcare\",\n        answers: [\n            {\n                id: 72,\n                correct: true,\n                content: \"Chăm sóc trẻ em\",\n                type: \"Chăm sóc trẻ em\"\n            }\n        ]\n    },\n    {\n        id: 73,\n        question: \"What is Recognize  ?\",\n        word: \"Recognize\",\n        answers: [\n            {\n                id: 73,\n                correct: true,\n                content: \"Nhận ra, thừa nhận\",\n                type: \"Nhận ra, thừa nhận\"\n            }\n        ]\n    },\n    {\n        id: 74,\n        question: \"What is Career ?\",\n        word: \"Career\",\n        answers: [\n            {\n                id: 74,\n                correct: true,\n                content: \"Sự nghiệp, nghề nghiệp\",\n                type: \"Sự nghiệp, nghề nghiệp\"\n            }\n        ]\n    },\n    {\n        id: 75,\n        question: \"What is Structured office  job ?\",\n        word: \"Structured office  job\",\n        answers: [\n            {\n                id: 75,\n                correct: true,\n                content: \"Công việc văn phòng cố định\",\n                type: \"Công việc văn phòng cố định\"\n            }\n        ]\n    },\n    {\n        id: 76,\n        question: \"What is Rewarding ?\",\n        word: \"Rewarding\",\n        answers: [\n            {\n                id: 76,\n                correct: true,\n                content: \"Đáng làm, giá trị, hậu  hĩnh, thỏa mái, …\",\n                type: \"Đáng làm, giá trị, hậu  hĩnh, thỏa mái, …\"\n            }\n        ]\n    },\n    {\n        id: 77,\n        question: \"What is Demand (N) ?\",\n        word: \"Demand (N)\",\n        answers: [\n            {\n                id: 77,\n                correct: true,\n                content: \"Nhu cầu\",\n                type: \"Nhu cầu\"\n            }\n        ]\n    },\n    {\n        id: 78,\n        question: \"What is Demand (V) ?\",\n        word: \"Demand (V)\",\n        answers: [\n            {\n                id: 78,\n                correct: true,\n                content: \"Ra lệnh, yêu cầu\",\n                type: \"Ra lệnh, yêu cầu\"\n            }\n        ]\n    },\n    {\n        id: 79,\n        question: \"What is Role model ?\",\n        word: \"Role model\",\n        answers: [\n            {\n                id: 79,\n                correct: true,\n                content: \"Hình mẫu\",\n                type: \"Hình mẫu\"\n            }\n        ]\n    },\n    {\n        id: 80,\n        question: \"What is Dryness ?\",\n        word: \"Dryness\",\n        answers: [\n            {\n                id: 80,\n                correct: true,\n                content: \"Sự khô cằn, khô\",\n                type: \"Sự khô cằn, khô\"\n            }\n        ]\n    },\n    {\n        id: 81,\n        question: \"What is Geographer ?\",\n        word: \"Geographer\",\n        answers: [\n            {\n                id: 81,\n                correct: true,\n                content: \"Nhà địa lý học\",\n                type: \"Nhà địa lý học\"\n            }\n        ]\n    },\n    {\n        id: 81,\n        question: \"What is Spring  ?\",\n        word: \"Suối\",\n        answers: [\n            {\n                id: 81,\n                correct: true,\n                content: \"Suối\",\n                type: \"Suối\"\n            }\n        ]\n    },\n    {\n        id: 82,\n        question: \"What is Precious ?\",\n        word: \"Precious\",\n        answers: [\n            {\n                id: 82,\n                correct: true,\n                content: \"Quý giá\",\n                type: \"Quý giá\"\n            }\n        ]\n    },\n    {\n        id: 83,\n        question: \"What is Resource ?\",\n        word: \"Resource\",\n        answers: [\n            {\n                id: 83,\n                correct: true,\n                content: \"Nguồn lực, tài nguyên\",\n                type: \"Nguồn lực, tài nguyên\"\n            }\n        ]\n    },\n    {\n        id: 84,\n        question: \"What is Continent ?\",\n        word: \"Continent\",\n        answers: [\n            {\n                id: 84,\n                correct: true,\n                content: \"Lục địa\",\n                type: \"Lục địa\"\n            }\n        ]\n    },\n    {\n        id: 85,\n        question: \"What is Rainfall ?\",\n        word: \"Rainfall\",\n        answers: [\n            {\n                id: 85,\n                correct: true,\n                content: \"Lượng mưa\",\n                type: \"Lượng mưa\"\n            }\n        ]\n    },\n    {\n        id: 86,\n        question: \"What is Searing ?\",\n        word: \"Searing\",\n        answers: [\n            {\n                id: 86,\n                correct: true,\n                content: \"Khắc nghiệp, mạnh, bốc  hơi\",\n                type: \"Khắc nghiệp, mạnh, bốc  hơi\"\n            }\n        ]\n    },\n    {\n        id: 87,\n        question: \"What is Evaporation ?\",\n        word: \"Evaporation\",\n        answers: [\n            {\n                id: 87,\n                correct: true,\n                content: \"Sự bốc hơi, sự bay hơi\",\n                type: \"Sự bốc hơi, sự bay hơi\"\n            }\n        ]\n    },\n    {\n        id: 88,\n        question: \"What is Standing water ?\",\n        word: \"Standing water\",\n        answers: [\n            {\n                id: 88,\n                correct: true,\n                content: \"Nước đọng\",\n                type: \"Nước đọng\"\n            }\n        ]\n    },\n    {\n        id: 89,\n        question: \"What is Dam ?\",\n        word: \"Dam\",\n        answers: [\n            {\n                id: 89,\n                correct: true,\n                content: \"Đập (chứa nước)\",\n                type: \"Đập (chứa nước)\"\n            }\n        ]\n    },\n    {\n        id: 90,\n        question: \"What is Barely ?\",\n        word: \"Barely\",\n        answers: [\n            {\n                id: 90,\n                correct: true,\n                content: \"Hầu như không, vừa đủ\",\n                type: \"Hầu như không, vừa đủ\"\n            }\n        ]\n    },\n    {\n        id: 91,\n        question: \"What is Puddle ?\",\n        word: \"Puddle\",\n        answers: [\n            {\n                id: 91,\n                correct: true,\n                content: \"Hồ, vũng\",\n                type: \"Hồ, vũng\"\n            }\n        ]\n    },\n    {\n        id: 92,\n        question: \"What is Penetrate ?\",\n        word: \"Penetrate\",\n        answers: [\n            {\n                id: 92,\n                correct: true,\n                content: \"Thâm nhập, thấm vào\",\n                type: \"Thâm nhập, thấm vào\"\n            }\n        ]\n    },\n    {\n        id: 93,\n        question: \"What is Moisture ?\",\n        word: \"Moisture\",\n        answers: [\n            {\n                id: 93,\n                correct: true,\n                content: \"Độ ẩm\",\n                type: \"Độ ẩm\"\n            }\n        ]\n    },\n    {\n        id: 94,\n        question: \"What is Underground ?\",\n        word: \"Underground\",\n        answers: [\n            {\n                id: 94,\n                correct: true,\n                content: \"Ngầm, dưới lòng đất\",\n                type: \"Ngầm, dưới lòng đất\"\n            }\n        ]\n    },\n    {\n        id: 95,\n        question: \"What is Pump ?\",\n        word: \"Pump\",\n        answers: [\n            {\n                id: 95,\n                correct: true,\n                content: \"Bơm lên, khai thác\",\n                type: \"Bơm lên, khai thác\"\n            }\n        ]\n    },\n    {\n        id: 96,\n        question: \"What is Salty ?\",\n        word: \"Salty\",\n        answers: [\n            {\n                id: 96,\n                correct: true,\n                content: \"Mặn\",\n                type: \"Mặn\"\n            }\n        ]\n    },\n    {\n        id: 97,\n        question: \"What is Consumption ?\",\n        word: \"Consumption\",\n        answers: [\n            {\n                id: 97,\n                correct: true,\n                content: \"Tiêu thụ, sử dụng\",\n                type: \"Tiêu thụ, sử dụng\"\n            }\n        ]\n    },\n    {\n        id: 98,\n        question: \"What is Irrigation ?\",\n        word: \"Irrigation\",\n        answers: [\n            {\n                id: 98,\n                correct: true,\n                content: \"Thủy lợi, tưới tiêu, điều tiết\",\n                type: \"Thủy lợi, tưới tiêu, điều tiết\"\n            }\n        ]\n    },\n    {\n        id: 99,\n        question: \"What is Crop ?\",\n        word: \"Crop\",\n        answers: [\n            {\n                id: 99,\n                correct: true,\n                content: \"Mùa vụ, mùa màng, hoa  màu\",\n                type: \"Mùa vụ, mùa màng, hoa  màu\"\n            }\n        ]\n    },\n    {\n        id: 100,\n        question: \"What is Reservoir ?\",\n        word: \"Reservoir\",\n        answers: [\n            {\n                id: 100,\n                correct: true,\n                content: \"Hồ chứa\",\n                type: \"Hồ chứa\"\n            }\n        ]\n    },\n    {\n        id: 101,\n        question: \"What is Bubble ?\",\n        word: \"Bubble\",\n        answers: [\n            {\n                id: 101,\n                correct: true,\n                content: \"Bong bóng\",\n                type: \"Bong bóng\"\n            }\n        ]\n    },\n\n\n];\n\nexport default quizQuestions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Question(props) {\n  return <h2 className=\"question\">{props.content}</h2>;\n}\n\nQuestion.propTypes = {\n  content: PropTypes.string.isRequired\n};\n\nexport default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction QuestionCount(props) {\n  return (\n    <div className=\"questionCount\">\n      Question <span>{props.counter}</span> of <span>{props.total}</span>\n    </div>\n  );\n}\n\nQuestionCount.propTypes = {\n  counter: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n};\n\nexport default QuestionCount;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n  return (\n    <li className=\"answerOption\">\n      <input\n        type=\"radio\"\n        className=\"radioCustomButton\"\n        name=\"radioGroup\"\n        checked={props.answerType === props.answer}\n        id={props.answerType}\n        value={props.answerType}\n        disabled={props.answer}\n        onChange={props.onAnswerSelected}\n      />\n      <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\n        {props.answerContent}\n      </label>\n    </li>\n  );\n}\n\nAnswerOption.propTypes = {\n  answerType: PropTypes.string.isRequired,\n  answerContent: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default AnswerOption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../components/Question';\nimport QuestionCount from '../components/QuestionCount';\nimport AnswerOption from '../components/AnswerOption';\n\nfunction Quiz(props) {\n  function renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key={key.content}\n        answerContent={key.content}\n        answerType={key.type}\n        answer={props.answer}\n        questionId={props.questionId}\n        onAnswerSelected={() => props.onAnswerSelected(key)}\n      />\n    );\n  }\n\n  return (\n    <CSSTransitionGroup\n      className=\"container-questions\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div key={props.questionId}>\n        <QuestionCount counter={props.questionId} total={props.questionTotal} />\n        <Question content={props.question} />\n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n      </div>\n    </CSSTransitionGroup>\n  );\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\n\nfunction Result(props) {\n  return (\n    <CSSTransitionGroup\n      className=\"container-questions result\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div>\n        <p>You have completed: <strong>{props.quizResult.answersCount}</strong> questions</p>\n        <p>You have  correct: <strong>{props.quizResult.totalAnswerCorrect}</strong> answers</p>\n        <p>Complete correct word: <strong>{props.quizResult.percentCorrect}</strong> %</p>\n        <a href=\"/\"><button>Do it again</button></a>\n      </div>\n    </CSSTransitionGroup>\n  );\n}\n\nResult.propTypes = {\n  quizResult: PropTypes.object.isRequired\n};\n\nexport default Result;\n","import React, { Component } from 'react';\nimport quizQuestions from './api/1_100_QuizQuestions';\nimport Quiz from './components/Quiz';\nimport Result from './components/Result';\nimport logo from './svg/logo.svg';\nimport * as ENUM from './constant/enum';\nimport * as _ from 'lodash';\nimport \"antd/dist/antd.css\";\nimport { Modal, Form, Button, Slider } from 'antd';\nimport {\n  SettingOutlined\n} from '@ant-design/icons';\nimport './App.css';\nimport { set } from 'lodash';\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst marks = {\n  0: '0',\n  10: '100',\n  20: '200',\n  30: '300',\n  40: '400',\n  50: '500',\n  60: '600',\n  70: '700',\n  80: '800',\n  90: '900',\n  100: {\n    style: {\n      color: '#f50',\n    },\n    label: <strong>1000</strong>,\n  },\n};\nclass App extends Component {\n  formRef = React.createRef();\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      answer: '',\n      answersCount: {},\n      totalAnswersUser: [],\n      result: null,\n      isModalVisible: false,\n      totalQuestions: 10,\n      range: [0, 10],\n      totalAnswer: 5,\n    };\n    this.quizQuestionsCore = _.cloneDeep(quizQuestions);\n    this.quizQuestionsGenerate = [];\n    this.quizQuestionsGenerateRaw = [];\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n    this.randomWrongAnswer = this.randomWrongAnswer.bind(this);\n    this.generateWrongAnswer = this.generateWrongAnswer.bind(this);\n    this.handleOk = this.handleOk.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.onChangeSlideTotalQuestions = this.onChangeSlideTotalQuestions.bind(this);\n    this.onChangeSlideRangeQuestions = this.onChangeSlideRangeQuestions.bind(this);\n\n\n\n  }\n\n  componentDidMount() {\n    const setting = (localStorage.getItem('settings'))\n    let totalQuestions = this.state.totalQuestions;\n    let range = this.state.range;\n\n    if (setting) {\n      const value = JSON.parse(setting);\n      this.setState({\n        totalQuestions: value.totalQuestions,\n        range: value.range,\n        isModalVisible: false\n      })\n      totalQuestions = value.totalQuestions;\n      if (this.formRef.current) {\n        this.formRef.current.setFieldsValue({\n          totalQuestions: value.totalQuestions,\n          range: value.range\n        })\n      }\n\n    }\n    else {\n      if (this.formRef.current) {\n        this.formRef.current.setFieldsValue({\n          totalQuestions: this.state.totalQuestions,\n          range: this.state.range\n        })\n      }\n    }\n\n\n    this.generateWrongAnswer()\n    this.quizQuestionsGenerateRaw = _.cloneDeep(this.quizQuestionsGenerate)\n    this.quizQuestionsGenerate = _.slice(this.quizQuestionsGenerate, 0, totalQuestions)\n    this.setState({\n      question: this.quizQuestionsGenerate[0].question,\n      answerOptions: this.quizQuestionsGenerate[0].answers\n    });\n  }\n  generateWrongAnswer() {\n    if (quizQuestions) {\n      this.quizQuestionsGenerate = quizQuestions.map(question => {\n        for (let i = 0; i < ENUM.TOTAL_WRONG_ANSWER - 1; i++) {\n          const answerWrong = this.randomWrongAnswer(question);\n          question.answers.push(answerWrong)\n        }\n        question.answers = _.shuffle(question.answers)\n        return question\n      })\n      this.quizQuestionsGenerate = this.shuffleArray(this.quizQuestionsGenerate)\n    }\n\n  }\n  onFinish = (values) => {\n    console.log(values);\n  };\n  randomWrongAnswer(questionItem) {\n    const answerWrong = _.sample(_.filter(this.quizQuestionsCore, item => {\n      return !questionItem.answers.map(item => item.id).includes(item.id)\n    }))\n    answerWrong.answers[0].correct = false;\n    answerWrong.answers[0].id = answerWrong.id;\n\n    return answerWrong.answers[0]\n  }\n  shuffleArray(array) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  handleAnswerSelected(event) {\n    this.setUserAnswer(event);\n\n    if (this.state.questionId < this.quizQuestionsGenerate.length) {\n      setTimeout(() => this.setNextQuestion(), 300);\n    } else {\n      setTimeout(() => this.setResults(this.getResults()), 300);\n    }\n  }\n\n  setUserAnswer(answer) {\n    this.setState((state, props) => ({\n      answersCount: {\n        ...state.answersCount,\n        [answer.content]: (state.answersCount[answer.content] || 0) + 1\n      },\n      totalAnswersUser: [...state.totalAnswersUser, answer],\n      answer: answer.content\n    }));\n  }\n\n  setNextQuestion() {\n    const counter = this.state.counter + 1;\n    const questionId = this.state.questionId + 1;\n\n    this.setState({\n      ...this.state,\n      counter: counter,\n      questionId: questionId,\n      question: this.quizQuestionsGenerate[counter].question,\n      answerOptions: this.quizQuestionsGenerate[counter].answers,\n      answer: ''\n    });\n  }\n\n  getResults() {\n    const answersCount = Object.keys(this.state.answersCount).length;\n    const totalAnswerCorrect = this.state.totalAnswersUser.filter(item => item.correct).length;\n    const percentCorrect = parseFloat((totalAnswerCorrect / answersCount) * 100).toFixed(2);;\n    const result = {\n      answersCount,\n      totalAnswerCorrect,\n      percentCorrect,\n      totalAnswersUser: this.state.totalAnswersUser\n    }\n    return result\n  }\n\n  setResults(result) {\n    if (result) {\n      console.log('result:', result)\n      this.setState({ result: result });\n    } else {\n      this.setState({ result: 'Cannot generate your result' });\n    }\n  }\n\n  renderQuiz() {\n    return (\n      <Quiz\n        answer={this.state.answer}\n        answerOptions={this.state.answerOptions}\n        questionId={this.state.questionId}\n        question={this.state.question}\n        questionTotal={this.quizQuestionsGenerate.length}\n        onAnswerSelected={this.handleAnswerSelected}\n      />\n    );\n  }\n\n  renderResult() {\n    return <Result quizResult={this.state.result} />;\n  }\n  handleOk() {\n    const value = this.formRef.current.getFieldsValue();\n    this.quizQuestionsGenerate = _.slice(this.quizQuestionsGenerateRaw, 0, value.totalQuestions)\n    localStorage.setItem('settings', JSON.stringify(value))\n    this.setState({\n      range: value.range,\n      totalQuestions: value.totalQuestions,\n      isModalVisible: false,\n      question: this.quizQuestionsGenerate[0].question,\n      answerOptions: this.quizQuestionsGenerate[0].answers\n    });\n  }\n  handleCancel() {\n    this.setState({ isModalVisible: false })\n  }\n  onChangeSlideTotalQuestions = (value) => {\n    this.formRef.current.setFieldsValue({\n      totalQuestions: value\n    })\n  };\n  onChangeSlideRangeQuestions = (value) => {\n    this.formRef.current.setFieldsValue({\n      range: value\n    })\n  };\n  openSetting() {\n\n    this.setState({\n      isModalVisible: true\n    })\n    setTimeout(() => this.formRef.current.setFieldsValue({\n      totalQuestions: this.state.totalQuestions,\n      range: this.state.range\n    }), 100)\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header-questions\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h2>Vocalbulary Multiple Choice</h2>\n          <SettingOutlined onClick={() => this.openSetting()} />\n        </div>\n        {this.state.result ? this.renderResult() : this.renderQuiz()}\n\n        <Modal title=\"Setting Vocalbulary\" visible={this.state.isModalVisible} onOk={() => this.handleOk()} onCancel={() => this.handleCancel()}>\n          <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n            <Form.Item\n              name=\"totalQuestions\"\n              label=\"Total Questions\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Slider defaultValue={10} step={10}\n                onChange={this.onChangeSlideTotalQuestions}\n              />\n\n            </Form.Item>\n            <Form.Item\n              name=\"range\"\n              label=\"Range Questions\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Slider range marks={marks} step={10}\n                onChange={this.onChangeSlideRangeQuestions}\n                defaultValue={[0, 10]} />\n            </Form.Item>\n\n\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}